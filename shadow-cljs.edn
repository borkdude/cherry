{:deps {:aliases [:cljs]}
 :builds
 {:cherry
  {:js-options {;; don't bundle any npm libs
                :js-provider :import}
   :compiler-options {:infer-externs :auto}
   :devtools {:enabled false}
   :target :esm
   :runtime :browser
   :output-dir "lib"
   :modules
   ;; note: this is overriden in bb build-cherry
   {:cljs.core {:exports {assoc cljs.core/assoc
                          map cljs.core/map
                          str cljs.core/str
                          keyword cljs.core/keyword
                          symbol cljs.core/symbol
                          vector cljs.core/vector
                          toJs cljs.core/clj->js
                          toCljs cljs.core/js->clj
                          dissoc cljs.core/dissoc
                          conj cljs.core/conj
                          get cljs.core/get
                          array_map cljs.core/array-map
                          hash_map cljs.core/hash-map
                          first cljs.core/first
                          rest cljs.core/rest
                          next cljs.core/next
                          nth cljs.core/nth
                          seq cljs.core/seq
                          goog_typeOf goog/typeOf}}
    :node {:entries [] :depends-on #{:compiler}}
    :compiler {:depends-on #{:cljs.core :clojure.string :clojure.walk}
               :exports
               {compileString cherry.compiler/compile-string}}
    :cli {:depends-on #{:compiler :clojure.string :clojure.walk}
          :init-fn cherry.internal.cli/init}}
   :build-hooks [(shadow.cljs.build-report/hook
                  {:output-to "report.html"})]}}}
